# Generated by Django 2.2.6 on 2020-04-19 19:15

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, null=True, verbose_name='name')),
                ('slug', models.SlugField(blank=True, null=True)),
                ('manufacturing_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='manufacturing name')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, null=True)),
                ('effective_price', models.PositiveIntegerField(null=True)),
                ('active_price', models.PositiveIntegerField(null=True)),
                ('disclaimer', models.CharField(blank=True, max_length=128, null=True, verbose_name='disclaimer')),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='BatteryTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=4, max_digits=6, null=True, verbose_name='score')),
                ('value', models.DecimalField(decimal_places=1, max_digits=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GraphicsCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=4, max_digits=6, null=True, verbose_name='score')),
                ('value', models.CharField(max_length=128, null=True, verbose_name='value')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Height',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=4, max_digits=6, null=True, verbose_name='score')),
                ('value', models.DecimalField(decimal_places=2, max_digits=4)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PanelType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=4, max_digits=6, null=True, verbose_name='score')),
                ('value', models.CharField(max_length=128, null=True, verbose_name='value')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Processor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=4, max_digits=6, null=True, verbose_name='score')),
                ('value', models.CharField(max_length=128, null=True, verbose_name='value')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=4, max_digits=6, null=True, verbose_name='score')),
                ('value', models.PositiveSmallIntegerField()),
            ],
            options={
                'verbose_name_plural': 'Ram storage',
            },
        ),
        migrations.CreateModel(
            name='RefreshRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=4, max_digits=6, null=True, verbose_name='score')),
                ('value', models.PositiveSmallIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Resolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=4, max_digits=6, null=True, verbose_name='score')),
                ('value', models.PositiveSmallIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ScreenSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=4, max_digits=6, null=True, verbose_name='score')),
                ('value', models.DecimalField(decimal_places=1, max_digits=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StorageSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=4, max_digits=6, null=True, verbose_name='score')),
                ('value', models.PositiveSmallIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StorageType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=4, max_digits=6, null=True, verbose_name='score')),
                ('value', models.CharField(max_length=128, null=True, verbose_name='value')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, verbose_name='name')),
                ('short_url', models.CharField(max_length=64, verbose_name='short url')),
                ('url', models.CharField(max_length=256, verbose_name='url')),
                ('description', models.CharField(blank=True, max_length=4096, null=True, verbose_name='description')),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Weight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=4, max_digits=6, null=True, verbose_name='score')),
                ('value', models.DecimalField(decimal_places=2, max_digits=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetaProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='name')),
                ('manufacturing_name', models.CharField(max_length=128, null=True, verbose_name='manufacturing_name')),
                ('availability', models.PositiveSmallIntegerField(null=True)),
                ('standard_price', models.PositiveIntegerField(null=True)),
                ('campaign_price', models.PositiveIntegerField(blank=True, null=True)),
                ('shipping', models.PositiveSmallIntegerField(null=True)),
                ('used', models.BooleanField(default=False)),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, null=True)),
                ('review_count', models.PositiveSmallIntegerField(null=True)),
                ('url', models.CharField(max_length=128, verbose_name='url')),
                ('is_active', models.BooleanField(default=True)),
                ('host', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meta_products', to='products.Website')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meta_products', to='products.BaseProduct')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=256, verbose_name='url')),
                ('placement', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('is_active', models.BooleanField(default=False)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Website')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.BaseProduct')),
            ],
        ),
        migrations.CreateModel(
            name='Laptop',
            fields=[
                ('baseproduct_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='products.BaseProduct')),
                ('battery_time', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='laptops', to='products.BatteryTime')),
                ('graphics_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='laptops', to='products.GraphicsCard')),
                ('height', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='laptops', to='products.Height')),
                ('panel_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='laptops', to='products.PanelType')),
                ('processor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='laptops', to='products.Processor')),
                ('ram', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='laptops', to='products.Ram')),
                ('refresh_rate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='laptops', to='products.RefreshRate')),
                ('resolution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='laptops', to='products.Resolution')),
                ('screen_size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='laptops', to='products.ScreenSize')),
                ('storage_size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='laptops', to='products.StorageSize')),
                ('storage_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='laptops', to='products.StorageType')),
                ('weight', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='laptops', to='products.Weight')),
            ],
            bases=('products.baseproduct',),
        ),
    ]
